// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "A POC to test Payment Service via PayPal",
    "title": "Go Celeb Poc",
    "contact": {
      "name": "Payment API Support"
    },
    "version": "1.0.0"
  },
  "basePath": "/v1",
  "paths": {
    "/test": {
      "$ref": "./paths/test.yml"
    }
  },
  "definitions": {
    "generalResponse": {
      "$ref": "./definitions/generalResponse.yml"
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "A POC to test Payment Service via PayPal",
    "title": "Go Celeb Poc",
    "contact": {
      "name": "Payment API Support"
    },
    "version": "1.0.0"
  },
  "basePath": "/v1",
  "paths": {
    "/test": {
      "get": {
        "tags": [
          "test"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/generalResponse"
            }
          },
          "400": {
            "description": "BAD REQUEST",
            "schema": {
              "$ref": "#/definitions/generalResponse"
            }
          },
          "401": {
            "description": "UNAUTHORIZED",
            "schema": {
              "$ref": "#/definitions/generalResponse"
            }
          },
          "403": {
            "description": "FORBIDDEN",
            "schema": {
              "$ref": "#/definitions/generalResponse"
            }
          },
          "404": {
            "description": "NOT FOUND",
            "schema": {
              "$ref": "#/definitions/generalResponse"
            }
          },
          "500": {
            "description": "INTERNAL SERVER ERROR",
            "schema": {
              "$ref": "#/definitions/generalResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "generalResponse": {
      "type": "object",
      "properties": {
        "error": {
          "properties": {
            "code": {
              "code": "int"
            },
            "message": {
              "message": "string"
            }
          },
          "error": "object"
        },
        "message": {
          "message": "string"
        },
        "success": {
          "success": "boolean"
        }
      }
    }
  }
}`))
}
